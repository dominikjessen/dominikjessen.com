---
interface ThemeToggleProps {
  className: string;
}

const { className } = Astro.props as ThemeToggleProps;
---

<div class="flex gap-4 items-center justify-center">
  <button
    id="lightMode"
    aria-label="Switch to light mode"
    class:list={['z-50 p-3 flex items-center justify-center rounded-full hover:bg-foreground/5', className]}
  >
    <svg width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
      <path
        fill="currentColor"
        fill-rule="evenodd"
        d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
      ></path>
    </svg>
  </button>
  <button
    id="darkMode"
    aria-label="Switch to dark mode"
    class:list={['z-50 p-3 flex items-center justify-center rounded-full hover:bg-foreground/5', className]}
  >
    <svg width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
      <path
        fill="currentColor"
        fill-rule="evenodd"
        d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
      ></path>
    </svg>
  </button>
  <button
    id="systemMode"
    aria-label="Use your system's color scheme"
    class:list={['z-50 p-3 flex items-center justify-center rounded-full hover:bg-foreground/5', className]}
  >
    <svg width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="1.5"
      ><path
        stroke-
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"
      ></path>
    </svg>
  </button>
</div>

<script is:inline>
const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
const theme = localStorage.getItem('theme') ?? systemTheme;

const switchToLightMode = () => {
  document.getElementById('darkMode').classList.remove('theme-active');
  document.getElementById('lightMode').classList.add('theme-active');
  document.documentElement.classList.remove('dark');
  localStorage.setItem('theme', 'light');
};

const switchToDarkMode = () => {
  document.getElementById('lightMode').classList.remove('theme-active');
  document.getElementById('darkMode').classList.add('theme-active');
  document.documentElement.classList.add('dark');
  localStorage.setItem('theme', 'dark');
};

const switchToSystemMode = () => {
  if (systemTheme === 'light') {
    switchToLightMode();
  } else if (systemTheme === 'dark') {
    switchToDarkMode();
  }
};

if (theme === 'light') {
  switchToLightMode();
} else {
  switchToDarkMode();
}

document.getElementById('lightMode').addEventListener('click', switchToLightMode);
document.getElementById('darkMode').addEventListener('click', switchToDarkMode);
document.getElementById('systemMode').addEventListener('click', switchToSystemMode);
</script>

<style>
  .theme-active {
    background: hsl(var(--foreground) / 0.05);
  }
</style>
